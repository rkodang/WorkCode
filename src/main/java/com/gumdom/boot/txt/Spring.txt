//********************************************************************************************************************//
1.Spring 通过IOC(Inversion of Control)来管理所有对象的实例化和初始化,控制对象与对象之间的依赖关系;
将由IOC容器管理的Java对象称为Spring Bean,与使用关键字'new'所创建的普通对象没有任何区别
//********************************************************************************************************************//
2.控制反转 是一种思想,为了降低程序耦合度,提高程序扩展力;
//********************************************************************************************************************//
3.依赖注入 (Dependency Injection) 依赖注入,依赖注入实现了控制反转的思想;
将对象依赖属性通过配置进行注入;
Bean管理;
//********************************************************************************************************************//

<bean id = "dog" class = "**.**.*.*">
    <property name = "" value =""></property>
</bean>

<bean id = "user" class = "**.**.*.*">
    <property name = "" value =""></property>
    <property name = "" ref ="dog"></property>
</bean>


<bean id = "user2" class = "**.**.*.*">
    <property name = "" value =""></property>
    <property name = "" >
        <bean id = "cat" class = "**.**.*.*">
            <property name = "" value =""></property>
        </bean>
    </property>
</bean>
//********************************************************************************************************************//


//********************************************************************************************************************//

<bean id = "boom" class = "**.**.*.*">
    <property name="type" value="C4"></property>
</bean>

<bean id = "user2" class = "**.**.*.*">
    <property name = "" value =""></property>
    <property name = "" >
        <bean id = "cat" class = "**.**.*.*">
            <property name = "" value =""></property>
        </bean>
        <property name="cacheMap">
            <map>
                <entry>
                    <key>
                        <value>redisKey</value>
                    </key>
                    <ref bean="boom"></ref>
                </entry>
            </map>
        </property>
    </property>
</bean>
//********************************************************************************************************************//
